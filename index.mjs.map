{"version":3,"file":"index.mjs","sources":["../lib/benchmark-class/set_timeout.js","../lib/benchmark-class/clear_timeout.js","../lib/benchmark-class/comment.js","../lib/utils/next_tick.js","../lib/benchmark-class/index.js","../lib/benchmark-class/run.js","../lib/benchmark-class/exit.js","../lib/benchmark-class/ended.js","../lib/benchmark-class/assert.js","../lib/benchmark-class/skip.js","../lib/benchmark-class/todo.js","../lib/benchmark-class/fail.js","../lib/benchmark-class/pass.js","../lib/benchmark-class/ok.js","../lib/benchmark-class/not_ok.js","../lib/benchmark-class/equal.js","../lib/benchmark-class/not_equal.js","../lib/benchmark-class/deep_equal.js","../lib/benchmark-class/not_deep_equal.js","../lib/benchmark-class/end.js","../lib/runner/encode_assertion.js","../lib/runner/index.js","../lib/runner/push.js","../lib/runner/encode_result.js","../lib/runner/create_stream.js","../lib/runner/run.js","../lib/runner/clear.js","../lib/runner/close.js","../lib/runner/exit.js","../lib/harness/validate.js","../lib/harness/init.js","../lib/harness/pretest.js","../lib/harness/iterations.js","../lib/harness/index.js","../lib/get_harness.js","../lib/utils/process.js","../lib/utils/can_exit.js","../lib/utils/can_emit_exit.js","../lib/log/index.js","../lib/log/log.js","../lib/exit_harness.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default setTimeout;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// EXPORTS //\n\nexport default clearTimeout;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport trim from '@stdlib/string-base-trim';\nimport replace from '@stdlib/string-base-replace';\nimport { REGEXP as EOL } from '@stdlib/regexp-eol';\n\n\n// VARIABLES //\n\nvar RE_COMMENT = /^#\\s*/;\n\n\n// MAIN //\n\n/**\n* Writes a comment.\n*\n* @private\n* @param {string} msg - comment message\n*/\nfunction comment( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tvar lines;\n\tvar i;\n\tmsg = trim( msg );\n\tlines = msg.split( EOL );\n\tfor ( i = 0; i < lines.length; i++ ) {\n\t\tmsg = trim( lines[ i ] );\n\t\tmsg = replace( msg, RE_COMMENT, '' );\n\t\tthis.emit( 'result', msg );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default comment;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Runs a function on a subsequent turn of the event loop.\n*\n* ## Notes\n*\n* -   `process.nextTick` is only Node.js.\n* -   `setImmediate` is non-standard.\n* -   Everything else is browser based (e.g., mutation observer, requestAnimationFrame, etc).\n* -   Only API which is universal is `setTimeout`.\n* -   Note that `0` is not actually `0ms`. Browser environments commonly have a minimum delay of `4ms`. This is acceptable. Here, the main intent of this function is to give the runtime a chance to run garbage collection, clear state, and tend to any other pending tasks before returning control to benchmark tasks. The larger aim (attainable or not) is to provide each benchmark run with as much of a fresh state as possible.\n*\n*\n* @private\n* @param {Function} fcn - function to run upon a subsequent turn of the event loop\n*/\nfunction nextTick( fcn ) {\n\tsetTimeout( fcn, 0 );\n}\n\n\n// EXPORTS //\n\nexport default nextTick;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EventEmitter = require( 'events' ).EventEmitter;\nimport inherit from '@stdlib/utils-inherit';\nimport defineProperty from '@stdlib/utils-define-property';\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport tic from '@stdlib/time-tic';\nimport toc from '@stdlib/time-toc';\nimport run from './run.js';\nimport exit from './exit.js';\nimport ended from './ended.js';\nimport assert from './assert.js';\nimport comment from './comment.js';\nimport skip from './skip.js';\nimport todo from './todo.js';\nimport fail from './fail.js';\nimport pass from './pass.js';\nimport ok from './ok.js';\nimport notOk from './not_ok.js';\nimport equal from './equal.js';\nimport notEqual from './not_equal.js';\nimport deepEqual from './deep_equal.js';\nimport notDeepEqual from './not_deep_equal.js';\nimport end from './end.js';\n\n\n// MAIN //\n\n/**\n* Benchmark constructor.\n*\n* @constructor\n* @param {string} name - benchmark name\n* @param {Options} opts - benchmark options\n* @param {boolean} opts.skip - boolean indicating whether to skip a benchmark\n* @param {PositiveInteger} opts.iterations - number of iterations\n* @param {PositiveInteger} opts.timeout - number of milliseconds before a benchmark automatically fails\n* @param {Function} [benchmark] - function containing benchmark code\n* @returns {Benchmark} Benchmark instance\n*\n* @example\n* var bench = new Benchmark( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.comment( 'Running benchmarks...' );\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.comment( 'Finished running benchmarks.' );\n*     b.end();\n* });\n*/\nfunction Benchmark( name, opts, benchmark ) {\n\tvar hasTicked;\n\tvar hasTocked;\n\tvar self;\n\tvar time;\n\tif ( !( this instanceof Benchmark ) ) {\n\t\treturn new Benchmark( name, opts, benchmark );\n\t}\n\tself = this;\n\thasTicked = false;\n\thasTocked = false;\n\n\tEventEmitter.call( this );\n\n\t// Private properties:\n\tsetReadOnly( this, '_benchmark', benchmark );\n\tsetReadOnly( this, '_skip', opts.skip );\n\n\tdefineProperty( this, '_ended', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_running', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_exited', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': false\n\t});\n\n\tdefineProperty( this, '_count', {\n\t\t'configurable': false,\n\t\t'enumerable': false,\n\t\t'writable': true,\n\t\t'value': 0\n\t});\n\n\t// Read-only:\n\tsetReadOnly( this, 'name', name );\n\tsetReadOnly( this, 'tic', start );\n\tsetReadOnly( this, 'toc', stop );\n\tsetReadOnly( this, 'iterations', opts.iterations );\n\tsetReadOnly( this, 'timeout', opts.timeout );\n\n\treturn this;\n\n\t/**\n\t* Starts a benchmark timer.\n\t*\n\t* ## Notes\n\t*\n\t* -   Using a scoped variable prevents nefarious mutation by bad actors hoping to manipulate benchmark results.\n\t* -   The one attack vector which remains is manipulation of the `require` cache for `tic` and `toc`.\n\t* -   One way to combat cache manipulation is by comparing the checksum of `Function#toString()` against known values.\n\t*\n\t* @private\n\t*/\n\tfunction start() {\n\t\tif ( hasTicked ) {\n\t\t\tself.fail( '.tic() called more than once' );\n\t\t} else {\n\t\t\tself.emit( 'tic' );\n\t\t\thasTicked = true;\n\t\t\ttime = tic();\n\t\t}\n\t}\n\n\t/**\n\t* Stops a benchmark timer.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction stop() {\n\t\tvar elapsed;\n\t\tvar secs;\n\t\tvar rate;\n\t\tvar out;\n\n\t\tif ( hasTicked === false ) {\n\t\t\treturn self.fail( '.toc() called before .tic()' );\n\t\t}\n\t\telapsed = toc( time );\n\t\tif ( hasTocked ) {\n\t\t\treturn self.fail( '.toc() called more than once' );\n\t\t}\n\t\thasTocked = true;\n\t\tself.emit( 'toc' );\n\n\t\tsecs = elapsed[ 0 ] + ( elapsed[ 1 ]/1e9 );\n\t\trate = self.iterations / secs;\n\n\t\tout = {\n\t\t\t'ok': true,\n\t\t\t'operator': 'result',\n\t\t\t'iterations': self.iterations,\n\t\t\t'elapsed': secs,\n\t\t\t'rate': rate\n\t\t};\n\t\tself.emit( 'result', out );\n\t}\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Benchmark, EventEmitter );\n\n/**\n* Runs a benchmark.\n*\n* @private\n* @name run\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'run', run );\n\n/**\n* Forcefully ends a benchmark.\n*\n* @private\n* @name exit\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'exit', exit );\n\n/**\n* Returns a `boolean` indicating if a benchmark has ended.\n*\n* @private\n* @name ended\n* @memberof Benchmark.prototype\n* @type {Function}\n* @returns {boolean} boolean indicating if a benchmark has ended\n*/\nsetReadOnly( Benchmark.prototype, 'ended', ended );\n\n/**\n* Generates an assertion.\n*\n* @private\n* @name _assert\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {boolean} ok - assertion outcome\n* @param {Options} opts - options\n*/\nsetReadOnly( Benchmark.prototype, '_assert', assert );\n\n/**\n* Writes a comment.\n*\n* @name comment\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - comment message\n*/\nsetReadOnly( Benchmark.prototype, 'comment', comment );\n\n/**\n* Generates an assertion which will be skipped.\n*\n* @name skip\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'skip', skip );\n\n/**\n* Generates an assertion which should be implemented.\n*\n* @name todo\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'todo', todo );\n\n/**\n* Generates a failing assertion.\n*\n* @name fail\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'fail', fail );\n\n/**\n* Generates a passing assertion.\n*\n* @name pass\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {string} msg - message\n*/\nsetReadOnly( Benchmark.prototype, 'pass', pass );\n\n/**\n* Asserts that a `value` is truthy.\n*\n* @name ok\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'ok', ok );\n\n/**\n* Asserts that a `value` is falsy.\n*\n* @name notOk\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'notOk', notOk );\n\n/**\n* Asserts that `actual` is strictly equal to `expected`.\n*\n* @name equal\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'equal', equal );\n\n/**\n* Asserts that `actual` is not strictly equal to `expected`.\n*\n* @name notEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nsetReadOnly( Benchmark.prototype, 'notEqual', notEqual );\n\n/**\n* Asserts that `actual` is deeply equal to `expected`.\n*\n* @name deepEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nsetReadOnly( Benchmark.prototype, 'deepEqual', deepEqual );\n\n/**\n* Asserts that `actual` is not deeply equal to `expected`.\n*\n* @name notDeepEqual\n* @memberof Benchmark.prototype\n* @type {Function}\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nsetReadOnly( Benchmark.prototype, 'notDeepEqual', notDeepEqual );\n\n/**\n* Ends a benchmark.\n*\n* @name end\n* @memberof Benchmark.prototype\n* @type {Function}\n*/\nsetReadOnly( Benchmark.prototype, 'end', end );\n\n\n// EXPORTS //\n\nexport default Benchmark;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport timeout from './set_timeout.js';\nimport clear from './clear_timeout.js';\n\n\n// MAIN //\n\n/**\n* Runs a benchmark.\n*\n* @private\n* @returns {void}\n*/\nfunction run() {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tvar id;\n\tif ( this._skip ) {\n\t\tthis.comment( 'SKIP '+this.name );\n\t\treturn this.end();\n\t}\n\tif ( !this._benchmark ) {\n\t\tthis.comment( 'TODO '+this.name );\n\t\treturn this.end();\n\t}\n\tself = this;\n\tthis._running = true;\n\n\tid = timeout( onTimeout, this.timeout );\n\tthis.once( 'end', endTimeout );\n\n\tthis.emit( 'prerun' );\n\tthis._benchmark( this );\n\tthis.emit( 'run' );\n\n\t/**\n\t* Callback invoked once a timeout ends.\n\t*\n\t* @private\n\t*/\n\tfunction onTimeout() {\n\t\tself.fail( 'benchmark timed out after '+self.timeout+'ms' );\n\t}\n\n\t/**\n\t* Clears a timeout.\n\t*\n\t* @private\n\t*/\n\tfunction endTimeout() {\n\t\tclear( id );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default run;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Forcefully ends a benchmark.\n*\n* @private\n* @returns {void}\n*/\nfunction exit() {\n\t/* eslint-disable no-invalid-this */\n\tif ( this._exited ) {\n\t\t// If we have already \"exited\", do not create more failing assertions when one should suffice...\n\t\treturn;\n\t}\n\t// Only \"exit\" when a benchmark has either not yet been run or is currently running. If a benchmark has already ended, no need to generate a failing assertion.\n\tif ( !this._ended ) {\n\t\tthis._exited = true;\n\t\tthis.fail( 'benchmark exited without ending' );\n\n\t\t// Allow running benchmarks to call `end` on their own...\n\t\tif ( !this._running ) {\n\t\t\tthis.end();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default exit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Returns a `boolean` indicating if a benchmark has ended.\n*\n* @private\n* @returns {boolean} boolean indicating if a benchmark has ended\n*/\nfunction ended() {\n\t/* eslint-disable no-invalid-this */\n\treturn this._ended;\n}\n\n\n// EXPORTS //\n\nexport default ended;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-invalid-this */\n\n'use strict';\n\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n// MODULES //\n\nimport hasOwnProp from '@stdlib/assert-has-own-property';\n\n\n// MAIN //\n\n/**\n* Generates an assertion.\n*\n* @private\n* @param {boolean} ok - assertion outcome\n* @param {Options} opts - options\n*/\nfunction assert( ok, opts ) {\n\tvar result;\n\tvar err;\n\n\tresult = {\n\t\t'id': this._count,\n\t\t'ok': ok,\n\t\t'skip': opts.skip,\n\t\t'todo': opts.todo,\n\t\t'name': opts.message || '(unnamed assert)',\n\t\t'operator': opts.operator\n\t};\n\tif ( hasOwnProp( opts, 'actual' ) ) {\n\t\tresult.actual = opts.actual;\n\t}\n\tif ( hasOwnProp( opts, 'expected' ) ) {\n\t\tresult.expected = opts.expected;\n\t}\n\tif ( !ok ) {\n\t\tresult.error = opts.error || new Error( this.name );\n\t\terr = new Error( format( '05d00' ) ); // eslint-disable-line no-unused-vars\n\n\t\t// TODO: generate an exception in order to locate the calling function (https://github.com/substack/tape/blob/master/lib/test.js#L215)\n\t}\n\tthis._count += 1;\n\tthis.emit( 'result', result );\n}\n\n\n// EXPORTS //\n\nexport default assert;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates an assertion which will be skipped.\n*\n* @private\n* @param {*} value - value\n* @param {string} msg - message\n*/\nfunction skip( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( true, {\n\t\t'message': msg,\n\t\t'operator': 'skip',\n\t\t'skip': true\n\t});\n}\n\n\n// EXPORTS //\n\nexport default skip;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates an assertion which should be implemented.\n*\n* @private\n* @param {*} value - value\n* @param {string} msg - message\n*/\nfunction todo( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !!value, {\n\t\t'message': msg,\n\t\t'operator': 'todo',\n\t\t'todo': true\n\t});\n}\n\n\n// EXPORTS //\n\nexport default todo;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a failing assertion.\n*\n* @private\n* @param {string} msg - message\n*/\nfunction fail( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( false, {\n\t\t'message': msg,\n\t\t'operator': 'fail'\n\t});\n}\n\n\n// EXPORTS //\n\nexport default fail;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Generates a passing assertion.\n*\n* @private\n* @param {string} msg - message\n*/\nfunction pass( msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( true, {\n\t\t'message': msg,\n\t\t'operator': 'pass'\n\t});\n}\n\n\n// EXPORTS //\n\nexport default pass;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that a `value` is truthy.\n*\n* @private\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nfunction ok( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !!value, {\n\t\t'message': msg || 'should be truthy',\n\t\t'operator': 'ok',\n\t\t'expected': true,\n\t\t'actual': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default ok;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that a `value` is falsy.\n*\n* @private\n* @param {*} value - value\n* @param {string} [msg] - message\n*/\nfunction notOk( value, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( !value, {\n\t\t'message': msg || 'should be falsy',\n\t\t'operator': 'notOk',\n\t\t'expected': false,\n\t\t'actual': value\n\t});\n}\n\n\n// EXPORTS //\n\nexport default notOk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is strictly equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nfunction equal( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( actual === expected, {\n\t\t'message': msg || 'should be equal',\n\t\t'operator': 'equal',\n\t\t'expected': expected,\n\t\t'actual': actual\n\t});\n}\n\n\n// EXPORTS //\n\nexport default equal;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is not strictly equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] - message\n*/\nfunction notEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis._assert( actual !== expected, {\n\t\t'message': msg || 'should not be equal',\n\t\t'operator': 'notEqual',\n\t\t'expected': expected,\n\t\t'actual': actual\n\t});\n}\n\n\n// EXPORTS //\n\nexport default notEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is deeply equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nfunction deepEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis.comment( 'actual: '+actual+'. expected: '+expected+'. msg: '+msg+'.' );\n\n\t// TODO: implement\n}\n\n\n// EXPORTS //\n\nexport default deepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Asserts that `actual` is not deeply equal to `expected`.\n*\n* @private\n* @param {*} actual - actual value\n* @param {*} expected - expected value\n* @param {string} [msg] message\n*/\nfunction notDeepEqual( actual, expected, msg ) {\n\t/* eslint-disable no-invalid-this */\n\tthis.comment( 'actual: '+actual+'. expected: '+expected+'. msg: '+msg+'.' );\n\n\t// TODO: implement\n}\n\n\n// EXPORTS //\n\nexport default notDeepEqual;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport nextTick from './../utils/next_tick.js';\n\n\n// MAIN //\n\n/**\n* Ends a benchmark.\n*\n* @private\n*/\nfunction end() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( this._ended ) {\n\t\tthis.fail( '.end() called more than once' );\n\t} else {\n\t\t// Prevents releasing the zalgo when running synchronous benchmarks.\n\t\tnextTick( onTick );\n\t}\n\tthis._ended = true;\n\tthis._running = false;\n\n\t/**\n\t* Callback invoked upon a subsequent tick of the event loop.\n\t*\n\t* @private\n\t*/\n\tfunction onTick() {\n\t\tself.emit( 'end' );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default end;\n","/* eslint-disable stdlib/jsdoc-require-throws-tags */\n\n/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport replace from '@stdlib/string-base-replace';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { REGEXP as RE_EOL } from '@stdlib/regexp-eol';\n\n\n// VARIABLES //\n\nvar RE_WHITESPACE = /\\s+/g;\n\n\n// MAIN //\n\n/**\n* Encodes an assertion.\n*\n* @private\n* @param {Object} result - result\n* @param {PositiveInteger} count - result count\n* @returns {string} encoded assertion\n*/\nfunction encodeAssertion( result, count ) {\n\tvar actualStack;\n\tvar errorStack;\n\tvar expected;\n\tvar actual;\n\tvar indent;\n\tvar stack;\n\tvar lines;\n\tvar out;\n\tvar i;\n\n\tout = '';\n\n\tif ( !result.ok ) {\n\t\tout += 'not ';\n\t}\n\t// Add result count:\n\tout += 'ok ' + count;\n\n\t// Add description:\n\tif ( result.name ) {\n\t\tout += ' ' + replace( result.name.toString(), RE_WHITESPACE, ' ' );\n\t}\n\t// Append directives:\n\tif ( result.skip ) {\n\t\tout += ' # SKIP';\n\t} else if ( result.todo ) {\n\t\tout += ' # TODO';\n\t}\n\tout += '\\n';\n\tif ( result.ok ) {\n\t\treturn out;\n\t}\n\t// Format diagnostics as YAML...\n\tindent = '  ';\n\tout += indent + '---\\n';\n\tout += indent + 'operator: ' + result.operator + '\\n';\n\tif (\n\t\thasOwnProp( result, 'actual' ) ||\n\t\thasOwnProp( result, 'expected' )\n\t) {\n\t\t// TODO: inspect object logic (https://github.com/substack/tape/blob/master/lib/results.js#L145)\n\t\texpected = result.expected;\n\t\tactual = result.actual;\n\t\tif ( actual !== actual && expected !== expected ) {\n\t\t\tthrow new Error( 'unexpected error.' ); // TODO: remove me\n\t\t}\n\t}\n\tif ( result.at ) {\n\t\tout += indent + 'at: ' + result.at + '\\n';\n\t}\n\tif ( result.actual ) {\n\t\tactualStack = result.actual.stack;\n\t}\n\tif ( result.error ) {\n\t\terrorStack = result.error.stack;\n\t}\n\tif ( actualStack ) {\n\t\tstack = actualStack;\n\t} else {\n\t\tstack = errorStack;\n\t}\n\tif ( stack ) {\n\t\tlines = stack.toString().split( RE_EOL );\n\t\tout += indent + 'stack: |-\\n';\n\t\tfor ( i = 0; i < lines.length; i++ ) {\n\t\t\tout += indent + '  ' + lines[ i ] + '\\n';\n\t\t}\n\t}\n\tout += indent + '...\\n';\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default encodeAssertion;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar EventEmitter = require( 'events' ).EventEmitter;\nimport inherit from '@stdlib/utils-inherit';\nimport defineProperty from '@stdlib/utils-define-property';\nimport TransformStream from '@stdlib/streams-node-transform';\nimport push from './push.js';\nimport createStream from './create_stream.js';\nimport run from './run.js';\nimport clear from './clear.js';\nimport close from './close.js'; // eslint-disable-line stdlib/no-redeclare\nimport exit from './exit.js';\n\n\n// MAIN //\n\n/**\n* Benchmark runner.\n*\n* @private\n* @constructor\n* @returns {Runner} Runner instance\n*\n* @example\n* var runner = new Runner();\n*/\nfunction Runner() {\n\tif ( !( this instanceof Runner ) ) {\n\t\treturn new Runner();\n\t}\n\tEventEmitter.call( this );\n\n\t// Private properties:\n\tdefineProperty( this, '_benchmarks', {\n\t\t'value': [],\n\t\t'configurable': false,\n\t\t'writable': false,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_stream', {\n\t\t'value': new TransformStream(),\n\t\t'configurable': false,\n\t\t'writable': false,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_closed', {\n\t\t'value': false,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': false\n\t});\n\n\tdefineProperty( this, '_running', {\n\t\t'value': false,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': false\n\t});\n\n\t// Public properties:\n\tdefineProperty( this, 'total', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'fail', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'pass', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'skip', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\tdefineProperty( this, 'todo', {\n\t\t'value': 0,\n\t\t'configurable': false,\n\t\t'writable': true,\n\t\t'enumerable': true\n\t});\n\n\treturn this;\n}\n\n/*\n* Inherit from the `EventEmitter` prototype.\n*/\ninherit( Runner, EventEmitter );\n\n/**\n* Adds a new benchmark.\n*\n* @private\n* @memberof Runner.prototype\n* @function push\n* @param {Benchmark} b - benchmark\n*/\ndefineProperty( Runner.prototype, 'push', {\n\t'value': push,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Creates a results stream.\n*\n* @private\n* @memberof Runner.prototype\n* @function createStream\n* @param {Options} [options] - stream options\n* @returns {TransformStream} transform stream\n*/\ndefineProperty( Runner.prototype, 'createStream', {\n\t'value': createStream,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Runs pending benchmarks.\n*\n* @private\n* @memberof Runner.prototype\n* @function run\n*/\ndefineProperty( Runner.prototype, 'run', {\n\t'value': run,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Removes any pending benchmarks.\n*\n* @private\n* @memberof Runner.prototype\n* @function clear\n*/\ndefineProperty( Runner.prototype, 'clear', {\n\t'value': clear,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Closes a benchmark runner.\n*\n* @private\n* @memberof Runner.prototype\n* @function close\n*/\ndefineProperty( Runner.prototype, 'close', {\n\t'value': close,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n/**\n* Forcefully exits a benchmark runner.\n*\n* @private\n* @memberof Runner.prototype\n* @function exit\n*/\ndefineProperty( Runner.prototype, 'exit', {\n\t'value': exit,\n\t'configurable': false,\n\t'writable': false,\n\t'enumerable': false\n});\n\n\n// EXPORTS //\n\nexport default Runner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport encodeAssertion from './encode_assertion.js';\nimport encodeResult from './encode_result.js';\n\n\n// MAIN //\n\n/**\n* Adds a new benchmark.\n*\n* @private\n* @param {Benchmark} b - benchmark\n*/\nfunction push( b ) {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\n\tthis._benchmarks.push( b );\n\n\tb.once( 'prerun', onPreRun );\n\tb.on( 'result', onResult );\n\n\tthis.emit( '_push', b );\n\n\t/**\n\t* Callback invoked upon a `prerun` event.\n\t*\n\t* @private\n\t*/\n\tfunction onPreRun() {\n\t\tself._stream.write( '# '+b.name+'\\n' );\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(Object|string)} res - result\n\t* @returns {void}\n\t*/\n\tfunction onResult( res ) {\n\t\t// Check for a comment...\n\t\tif ( isString( res ) ) {\n\t\t\treturn self._stream.write( '# '+res+'\\n' );\n\t\t}\n\t\tif ( res.operator === 'result' ) {\n\t\t\tres = encodeResult( res );\n\t\t\treturn self._stream.write( res );\n\t\t}\n\t\tself.total += 1;\n\t\tif ( res.ok ) {\n\t\t\tif ( res.skip ) {\n\t\t\t\tself.skip += 1;\n\t\t\t} else if ( res.todo ) {\n\t\t\t\tself.todo += 1;\n\t\t\t}\n\t\t\tself.pass += 1;\n\t\t}\n\t\t// According to the TAP spec, todos pass even if not \"ok\"...\n\t\telse if ( res.todo ) {\n\t\t\tself.pass += 1;\n\t\t\tself.todo += 1;\n\t\t}\n\t\t// Everything else is a failure...\n\t\telse {\n\t\t\tself.fail += 1;\n\t\t}\n\t\tres = encodeAssertion( res, self.total );\n\t\tself._stream.write( res );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default push;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar YAML_INDENT = '  ';\nvar YAML_BEGIN = YAML_INDENT + '---\\n';\nvar YAML_END = YAML_INDENT + '...\\n';\n\n\n// MAIN //\n\n/**\n* Encodes a result as a YAML block.\n*\n* @private\n* @param {Object} result - result\n* @returns {string} encoded result\n*/\nfunction encodeResult( result ) {\n\tvar out = YAML_BEGIN;\n\tout += YAML_INDENT + 'iterations: '+result.iterations+'\\n';\n\tout += YAML_INDENT + 'elapsed: '+result.elapsed+'\\n';\n\tout += YAML_INDENT + 'rate: '+result.rate+'\\n';\n\tout += YAML_END;\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default encodeResult;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* eslint-disable no-underscore-dangle */\n\n'use strict';\n\n// MODULES //\n\nimport TransformStream from '@stdlib/streams-node-transform';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport nextTick from './../utils/next_tick.js';\n\n\n// VARIABLES //\n\nvar TAP_HEADER = 'TAP version 13';\n\n\n// MAIN //\n\n/**\n* Creates a results stream.\n*\n* @private\n* @param {Options} [options] - stream options\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {TransformStream} transform stream\n*/\nfunction createStream( options ) {\n\t/* eslint-disable no-invalid-this */\n\tvar stream;\n\tvar opts;\n\tvar self;\n\tvar id;\n\n\tself = this;\n\tif ( arguments.length ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\tstream = new TransformStream( opts );\n\tif ( opts.objectMode ) {\n\t\tid = 0;\n\t\tthis.on( '_push', onPush );\n\t\tthis.on( 'done', onDone );\n\t} else {\n\t\tstream.write( TAP_HEADER+'\\n' );\n\t\tthis._stream.pipe( stream );\n\t}\n\tthis.on( '_run', onRun );\n\treturn stream;\n\n\t/**\n\t* Runs the next benchmark.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tnextTick( onTick );\n\t}\n\n\t/**\n\t* Callback invoked upon the next tick.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onTick() {\n\t\tvar b = self._benchmarks.shift();\n\t\tif ( b ) {\n\t\t\tb.run();\n\t\t\tif ( !b.ended() ) {\n\t\t\t\treturn b.once( 'end', next );\n\t\t\t}\n\t\t\treturn next();\n\t\t}\n\t\tself._running = false;\n\t\tself.emit( 'done' );\n\t}\n\n\t/**\n\t* Callback invoked upon a run event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onRun() {\n\t\tif ( !self._running ) {\n\t\t\tself._running = true;\n\t\t\treturn next();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a push event.\n\t*\n\t* @private\n\t* @param {Benchmark} b - benchmark\n\t*/\n\tfunction onPush( b ) {\n\t\tvar bid = id;\n\t\tid += 1;\n\n\t\tb.once( 'prerun', onPreRun );\n\t\tb.on( 'result', onResult );\n\t\tb.on( 'end', onEnd );\n\n\t\t/**\n\t\t* Callback invoked upon a `prerun` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onPreRun() {\n\t\t\tvar row = {\n\t\t\t\t'type': 'benchmark',\n\t\t\t\t'name': b.name,\n\t\t\t\t'id': bid\n\t\t\t};\n\t\t\tstream.write( row );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked upon a `result` event.\n\t\t*\n\t\t* @private\n\t\t* @param {(Object|string)} res - result\n\t\t*/\n\t\tfunction onResult( res ) {\n\t\t\tif ( isString( res ) ) {\n\t\t\t\tres = {\n\t\t\t\t\t'benchmark': bid,\n\t\t\t\t\t'type': 'comment',\n\t\t\t\t\t'name': res\n\t\t\t\t};\n\t\t\t} else if ( res.operator === 'result' ) {\n\t\t\t\tres.benchmark = bid;\n\t\t\t\tres.type = 'result';\n\t\t\t} else {\n\t\t\t\tres.benchmark = bid;\n\t\t\t\tres.type = 'assert';\n\t\t\t}\n\t\t\tstream.write( res );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked upon an `end` event.\n\t\t*\n\t\t* @private\n\t\t*/\n\t\tfunction onEnd() {\n\t\t\tstream.write({\n\t\t\t\t'benchmark': bid,\n\t\t\t\t'type': 'end'\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `done` event.\n\t*\n\t* @private\n\t*/\n\tfunction onDone() {\n\t\tstream.destroy();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default createStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Runs pending benchmarks.\n*\n* @private\n*/\nfunction run() {\n\t/* eslint-disable no-invalid-this */\n\tthis.emit( '_run' );\n}\n\n\n// EXPORTS //\n\nexport default run;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Removes any pending benchmarks.\n*\n* @private\n*/\nfunction clear() {\n\t/* eslint-disable no-invalid-this */\n\tthis._benchmarks.length = 0;\n}\n\n\n// EXPORTS //\n\nexport default clear;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Closes a benchmark runner.\n*\n* @private\n* @returns {void}\n*/\nfunction closeRunner() {\n\t/* eslint-disable no-invalid-this */\n\tvar self = this;\n\tif ( this._closed ) {\n\t\treturn;\n\t}\n\tthis._closed = true;\n\tif ( this._benchmarks.length ) {\n\t\tthis.clear();\n\t\tthis._stream.write( '# WARNING: harness closed before completion.\\n' );\n\t} else {\n\t\tthis._stream.write( '#\\n' );\n\t\tthis._stream.write( '1..'+this.total+'\\n' );\n\t\tthis._stream.write( '# total '+this.total+'\\n' );\n\t\tthis._stream.write( '# pass  '+this.pass+'\\n' );\n\t\tif ( this.fail ) {\n\t\t\tthis._stream.write( '# fail  '+this.fail+'\\n' );\n\t\t}\n\t\tif ( this.skip ) {\n\t\t\tthis._stream.write( '# skip  '+this.skip+'\\n' );\n\t\t}\n\t\tif ( this.todo ) {\n\t\t\tthis._stream.write( '# todo  '+this.todo+'\\n' );\n\t\t}\n\t\tif ( !this.fail ) {\n\t\t\tthis._stream.write( '#\\n# ok\\n' );\n\t\t}\n\t}\n\tthis._stream.once( 'close', onClose );\n\tthis._stream.destroy();\n\n\t/**\n\t* Callback invoked upon a `close` event.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default closeRunner;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Forcefully exits a benchmark runner.\n*\n* @private\n*/\nfunction exit() {\n\t/* eslint-disable no-invalid-this */\n\tvar self;\n\tvar i;\n\tfor ( i = 0; i < this._benchmarks.length; i++ ) {\n\t\tthis._benchmarks[ i ].exit();\n\t}\n\tself = this;\n\tthis.clear();\n\tthis._stream.once( 'close', onClose );\n\tthis._stream.destroy();\n\n\t/**\n\t* Callback invoked upon a `close` event.\n\t*\n\t* @private\n\t*/\n\tfunction onClose() {\n\t\tself.emit( 'close' );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default exit;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport isNull from '@stdlib/assert-is-null';\nimport { isPrimitive as isPositiveInteger } from '@stdlib/assert-is-positive-integer';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination object\n* @param {Options} options - function options\n* @param {boolean} [options.skip] - boolean indicating whether to skip a benchmark\n* @param {(PositiveInteger|null)} [options.iterations] - number of iterations\n* @param {PositiveInteger} [options.repeats] - number of repeats\n* @param {PositiveInteger} [options.timeout] - number of milliseconds before a benchmark automatically fails\n* @returns {(Error|null)} error object or null\n*\n* @example\n* var opts = {};\n* var options = {\n*     'skip': false,\n*     'iterations': 1e6,\n*     'repeats': 3,\n*     'timeout': 10000\n* };\n*\n* var err = validate( opts, options );\n* if ( err ) {\n*    throw err;\n* }\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '05d2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'skip' ) ) {\n\t\topts.skip = options.skip;\n\t\tif ( !isBoolean( opts.skip ) ) {\n\t\t\treturn new TypeError( format( '05d30', 'skip', opts.skip ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'iterations' ) ) {\n\t\topts.iterations = options.iterations;\n\t\tif (\n\t\t\t!isPositiveInteger( opts.iterations ) &&\n\t\t\t!isNull( opts.iterations )\n\t\t) {\n\t\t\treturn new TypeError( format( '05d8Z', 'iterations', opts.iterations ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'repeats' ) ) {\n\t\topts.repeats = options.repeats;\n\t\tif ( !isPositiveInteger( opts.repeats ) ) {\n\t\t\treturn new TypeError( format( '05d3b', 'repeats', opts.repeats ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'timeout' ) ) {\n\t\topts.timeout = options.timeout;\n\t\tif ( !isPositiveInteger( opts.timeout ) ) {\n\t\t\treturn new TypeError( format( '05d3b', 'timeout', opts.timeout ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport pretest from './pretest.js';\nimport iterations from './iterations.js';\n\n\n// MAIN //\n\n/**\n* Performs benchmark initialization tasks.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} opts - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after completing initialization tasks\n* @returns {void}\n*/\nfunction init( name, opts, benchmark, clbk ) {\n\t// If no benchmark function, then the benchmark is considered a \"todo\", so no need to repeat multiple times...\n\tif ( !benchmark ) {\n\t\topts.repeats = 1;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n\t// If the `skip` option to `true`, no need to initialize or repeat multiple times as will not be running the benchmark:\n\tif ( opts.skip ) {\n\t\topts.repeats = 1;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n\t// Perform pretests:\n\tpretest( name, opts, benchmark, onPreTest );\n\n\t/**\n\t* Callback invoked upon completing pretests.\n\t*\n\t* @private\n\t* @param {Error} [error] - error object\n\t* @returns {void}\n\t*/\n\tfunction onPreTest( error ) {\n\t\t// If the pretests failed, don't run the benchmark multiple times...\n\t\tif ( error ) {\n\t\t\topts.repeats = 1;\n\t\t\topts.iterations = 1;\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\t// If a user specified an iteration number, we can begin running benchmarks...\n\t\tif ( opts.iterations ) {\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\t// Determine iteration number:\n\t\titerations( name, opts, benchmark, onIterations );\n\t}\n\n\t/**\n\t* Callback invoked upon determining an iteration number.\n\t*\n\t* @private\n\t* @param {(Error|null)} error - error object\n\t* @param {PositiveInteger} iter - number of iterations\n\t* @returns {void}\n\t*/\n\tfunction onIterations( error, iter ) {\n\t\t// If provided an error, then a benchmark failed, and, similar to pretests, don't run the benchmark multiple times...\n\t\tif ( error ) {\n\t\t\topts.repeats = 1;\n\t\t\topts.iterations = 1;\n\t\t\treturn clbk( name, opts, benchmark );\n\t\t}\n\t\topts.iterations = iter;\n\t\treturn clbk( name, opts, benchmark );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default init;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport copy from '@stdlib/utils-copy';\nimport Benchmark from './../benchmark-class';\n\n\n// MAIN //\n\n/**\n* Runs pretests to sanity check and/or catch failures.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} options - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after completing pretests\n*/\nfunction pretest( name, options, benchmark, clbk ) {\n\tvar fail;\n\tvar opts;\n\tvar tic;\n\tvar toc;\n\tvar b;\n\n\t// Counters to determine the number of `tic` and `toc` events:\n\ttic = 0;\n\ttoc = 0;\n\n\t// Local copy:\n\topts = copy( options );\n\topts.iterations = 1;\n\n\t// Pretest to check for minimum requirements and/or errors...\n\tb = new Benchmark( name, opts, benchmark );\n\tb.on( 'result', onResult );\n\tb.on( 'tic', onTic );\n\tb.on( 'toc', onToc );\n\tb.once( 'end', onEnd );\n\tb.run();\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif (\n\t\t\t!isString( result ) &&\n\t\t\t!result.ok &&\n\t\t\t!result.todo\n\t\t) {\n\t\t\tfail = true;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `tic` event.\n\t*\n\t* @private\n\t*/\n\tfunction onTic() {\n\t\ttic += 1;\n\t}\n\n\t/**\n\t* Callback invoked upon a `toc` event.\n\t*\n\t* @private\n\t*/\n\tfunction onToc() {\n\t\ttoc += 1;\n\t}\n\n\t/**\n\t* Callback invoked upon an `end` event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tvar err;\n\t\tif ( fail ) {\n\t\t\t// Possibility that failure is intermittent, but we will assume that the usual case is that the failure would persist across all repeats and no sense failing multiple times when once suffices.\n\t\t\terr = new Error( 'unexpected error. Benchmark failed.' );\n\t\t} else if ( tic !== 1 || toc !== 1 ) {\n\t\t\t// Unable to do anything definitive with timing information (e.g., a tic with no toc or vice versa, or benchmark function calls neither tic nor toc).\n\t\t\terr = new Error( 'unexpected error. Invalid benchmark.' );\n\t\t}\n\t\tif ( err ) {\n\t\t\treturn clbk( err );\n\t\t}\n\t\treturn clbk();\n\t}\n}\n\n\n// EXPORTS //\n\nexport default pretest;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport copy from '@stdlib/utils-copy';\nimport Benchmark from './../benchmark-class';\n\n\n// VARIABLES //\n\nvar MIN_TIME = 0.1; // seconds\nvar ITERATIONS = 10; // 10^1\nvar MAX_ITERATIONS = 10000000000; // 10^10\n\n\n// MAIN //\n\n/**\n* Determines the number of iterations.\n*\n* @private\n* @param {string} name - benchmark name\n* @param {Options} options - benchmark options\n* @param {(Function|undefined)} benchmark - function containing benchmark code\n* @param {Callback} clbk - callback to invoke after determining number of iterations\n* @returns {void}\n*/\nfunction iterations( name, options, benchmark, clbk ) {\n\tvar opts;\n\tvar time;\n\n\t// Elapsed time (in seconds):\n\ttime = 0;\n\n\t// Create a local copy:\n\topts = copy( options );\n\topts.iterations = ITERATIONS;\n\n\t// Begin running benchmarks:\n\treturn next();\n\n\t/**\n\t* Run a new benchmark.\n\t*\n\t* @private\n\t*/\n\tfunction next() {\n\t\tvar b = new Benchmark( name, opts, benchmark );\n\t\tb.on( 'result', onResult );\n\t\tb.once( 'end', onEnd );\n\t\tb.run();\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif ( !isString( result ) && result.operator === 'result' ) {\n\t\t\ttime = result.elapsed;\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon an `end` event.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction onEnd() {\n\t\tif (\n\t\t\ttime < MIN_TIME &&\n\t\t\topts.iterations < MAX_ITERATIONS\n\t\t) {\n\t\t\topts.iterations *= 10;\n\t\t\treturn next();\n\t\t}\n\t\tclbk( null, opts.iterations );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default iterations;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport setReadOnlyAccessor from '@stdlib/utils-define-nonenumerable-read-only-accessor';\nimport { isPrimitive as isString } from '@stdlib/assert-is-string';\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport copy from '@stdlib/utils-copy';\nimport Benchmark from './../benchmark-class';\nimport Runner from './../runner';\nimport nextTick from './../utils/next_tick.js';\nimport DEFAULTS from './../defaults.json';\nimport validate from './validate.js';\nimport init from './init.js';\n\n\n// MAIN //\n\n/**\n* Creates a benchmark harness.\n*\n* @param {Options} [options] - function options\n* @param {boolean} [options.autoclose] - boolean indicating whether to automatically close a harness after a harness finishes running all benchmarks\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*\n* @example\n* var bench = createHarness( onFinish );\n*\n* function onFinish() {\n*     bench.close();\n*     console.log( 'Exit code: %d', bench.exitCode );\n* }\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*\n* @example\n* import stdout from '@stdlib/streams-node-stdout';\n*\n* var stream = createHarness().createStream();\n* stream.pipe( stdout );\n*/\nfunction createHarness( options, clbk ) {\n\tvar exitCode;\n\tvar runner;\n\tvar queue;\n\tvar opts;\n\tvar cb;\n\n\topts = {};\n\tif ( arguments.length === 1 ) {\n\t\tif ( isFunction( options ) ) {\n\t\t\tcb = options;\n\t\t} else if ( isObject( options ) ) {\n\t\t\topts = options;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an options object or a function. Value: `%s`.', options ) );\n\t\t}\n\t} else if ( arguments.length > 1 ) {\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( '05d3X', options ) );\n\t\t}\n\t\tif ( hasOwnProp( options, 'autoclose' ) ) {\n\t\t\topts.autoclose = options.autoclose;\n\t\t\tif ( !isBoolean( opts.autoclose ) ) {\n\t\t\t\tthrow new TypeError( format( '05d30', 'autoclose', opts.autoclose ) );\n\t\t\t}\n\t\t}\n\t\tcb = clbk;\n\t\tif ( !isFunction( cb ) ) {\n\t\t\tthrow new TypeError( format( '05d2S', cb ) );\n\t\t}\n\t}\n\trunner = new Runner();\n\tif ( opts.autoclose ) {\n\t\trunner.once( 'done', close );\n\t}\n\tif ( cb ) {\n\t\trunner.once( 'done', cb );\n\t}\n\texitCode = 0;\n\tqueue = [];\n\n\t/**\n\t* Benchmark harness.\n\t*\n\t* @private\n\t* @param {string} name - benchmark name\n\t* @param {Options} [options] - benchmark options\n\t* @param {boolean} [options.skip=false] - boolean indicating whether to skip a benchmark\n\t* @param {(PositiveInteger|null)} [options.iterations=null] - number of iterations\n\t* @param {PositiveInteger} [options.repeats=3] - number of repeats\n\t* @param {PositiveInteger} [options.timeout=300000] - number of milliseconds before a benchmark automatically fails\n\t* @param {Function} [benchmark] - function containing benchmark code\n\t* @throws {TypeError} first argument must be a string\n\t* @throws {TypeError} options argument must be an object\n\t* @throws {TypeError} must provide valid options\n\t* @throws {TypeError} benchmark argument must a function\n\t* @throws {Error} benchmark error\n\t* @returns {Function} benchmark harness\n\t*/\n\tfunction harness( name, options, benchmark ) {\n\t\tvar opts;\n\t\tvar err;\n\t\tvar b;\n\t\tif ( !isString( name ) ) {\n\t\t\tthrow new TypeError( format( '05d3R', name ) );\n\t\t}\n\t\topts = copy( DEFAULTS );\n\t\tif ( arguments.length === 2 ) {\n\t\t\tif ( isFunction( options ) ) {\n\t\t\t\tb = options;\n\t\t\t} else {\n\t\t\t\terr = validate( opts, options );\n\t\t\t\tif ( err ) {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( arguments.length > 2 ) {\n\t\t\terr = validate( opts, options );\n\t\t\tif ( err ) {\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tb = benchmark;\n\t\t\tif ( !isFunction( b ) ) {\n\t\t\t\tthrow new TypeError( format( '05d3Z', b ) );\n\t\t\t}\n\t\t}\n\t\t// Add the benchmark to the initialization queue:\n\t\tqueue.push( [ name, opts, b ] );\n\n\t\t// Perform initialization on the next turn of the event loop (note: this allows all benchmarks to be \"registered\" within the same turn of the loop; otherwise, we run the risk of registration-execution race conditions (i.e., a benchmark registers and executes before other benchmarks can register, depleting the benchmark queue and leading the harness to close)):\n\t\tif ( queue.length === 1 ) {\n\t\t\tnextTick( initialize );\n\t\t}\n\t\treturn harness;\n\t}\n\n\t/**\n\t* Initializes each benchmark.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction initialize() {\n\t\tvar idx = -1;\n\t\treturn next();\n\n\t\t/**\n\t\t* Initialize the next benchmark.\n\t\t*\n\t\t* @private\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction next() {\n\t\t\tvar args;\n\n\t\t\tidx += 1;\n\n\t\t\t// If all benchmarks have been initialized, begin running the benchmarks:\n\t\t\tif ( idx === queue.length ) {\n\t\t\t\tqueue.length = 0;\n\t\t\t\treturn runner.run();\n\t\t\t}\n\t\t\t// Initialize the next benchmark:\n\t\t\targs = queue[ idx ];\n\t\t\tinit( args[ 0 ], args[ 1 ], args[ 2 ], onInit );\n\t\t}\n\n\t\t/**\n\t\t* Callback invoked after performing initialization tasks.\n\t\t*\n\t\t* @private\n\t\t* @param {string} name - benchmark name\n\t\t* @param {Options} opts - benchmark options\n\t\t* @param {(Function|undefined)} benchmark - function containing benchmark code\n\t\t* @returns {void}\n\t\t*/\n\t\tfunction onInit( name, opts, benchmark ) {\n\t\t\tvar b;\n\t\t\tvar i;\n\n\t\t\t// Create a `Benchmark` instance for each repeat to ensure each benchmark has its own state...\n\t\t\tfor ( i = 0; i < opts.repeats; i++ ) {\n\t\t\t\tb = new Benchmark( name, opts, benchmark );\n\t\t\t\tb.on( 'result', onResult );\n\t\t\t\trunner.push( b );\n\t\t\t}\n\t\t\treturn next();\n\t\t}\n\t}\n\n\t/**\n\t* Callback invoked upon a `result` event.\n\t*\n\t* @private\n\t* @param {(string|Object)} result - result\n\t*/\n\tfunction onResult( result ) {\n\t\tif (\n\t\t\t!isString( result ) &&\n\t\t\t!result.ok &&\n\t\t\t!result.todo\n\t\t) {\n\t\t\texitCode = 1;\n\t\t}\n\t}\n\n\t/**\n\t* Returns a results stream.\n\t*\n\t* @private\n\t* @param {Object} [options] - options\n\t* @returns {TransformStream} transform stream\n\t*/\n\tfunction createStream( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn runner.createStream( options );\n\t\t}\n\t\treturn runner.createStream();\n\t}\n\n\t/**\n\t* Closes a benchmark harness.\n\t*\n\t* @private\n\t*/\n\tfunction close() {\n\t\trunner.close();\n\t}\n\n\t/**\n\t* Forcefully exits a benchmark harness.\n\t*\n\t* @private\n\t*/\n\tfunction exit() {\n\t\trunner.exit();\n\t}\n\n\t/**\n\t* Returns the harness exit code.\n\t*\n\t* @private\n\t* @returns {NonNegativeInteger} exit code\n\t*/\n\tfunction getExitCode() {\n\t\treturn exitCode;\n\t}\n\n\tsetReadOnly( harness, 'createStream', createStream );\n\tsetReadOnly( harness, 'close', close );\n\tsetReadOnly( harness, 'exit', exit );\n\tsetReadOnlyAccessor( harness, 'exitCode', getExitCode );\n\n\treturn harness;\n}\n\n\n// EXPORTS //\n\nexport default createHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport canEmitExit from './utils/can_emit_exit.js';\nimport createExitHarness from './exit_harness.js';\n\n\n// VARIABLES //\n\nvar harness;\n\n\n// MAIN //\n\n/**\n* Returns a benchmark harness. If a harness has already been created, returns the cached harness.\n*\n* @private\n* @param {Options} [options] - harness options\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @returns {Function} benchmark harness\n*/\nfunction getHarness( options, clbk ) {\n\tvar opts;\n\tvar cb;\n\tif ( harness ) {\n\t\treturn harness;\n\t}\n\tif ( arguments.length > 1 ) {\n\t\topts = options;\n\t\tcb = clbk;\n\t} else {\n\t\topts = {};\n\t\tcb = options;\n\t}\n\topts.autoclose = !canEmitExit;\n\tharness = createExitHarness( opts, cb );\n\n\t// Update state:\n\tgetHarness.cached = true;\n\n\treturn harness;\n}\n\n\n// EXPORTS //\n\nexport default getHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar proc = require( 'process' );\n\n\n// EXPORTS //\n\nexport default proc;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport proc from './process.js';\n\n\n// MAIN //\n\nvar bool = ( proc && typeof proc.exit === 'function' );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport IS_BROWSER from '@stdlib/assert-is-browser';\nimport canExit from './can_exit.js';\n\n\n// MAIN //\n\nvar bool = ( !IS_BROWSER && canExit );\n\n\n// EXPORTS //\n\nexport default bool;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport TransformStream from '@stdlib/streams-node-transform';\nimport fromCodePoint from '@stdlib/string-from-code-point';\nimport log from './log.js';\n\n\n// MAIN //\n\n/**\n* Returns a Transform stream for logging to the console.\n*\n* @private\n* @returns {TransformStream} transform stream\n*/\nfunction createStream() {\n\tvar stream;\n\tvar line;\n\n\tstream = new TransformStream({\n\t\t'transform': transform,\n\t\t'flush': flush\n\t});\n\tline = '';\n\n\treturn stream;\n\n\t/**\n\t* Callback invoked upon receiving a new chunk.\n\t*\n\t* @private\n\t* @param {(Buffer|string)} chunk - chunk\n\t* @param {string} enc - Buffer encoding\n\t* @param {Callback} clbk - callback to invoke after transforming the streamed chunk\n\t*/\n\tfunction transform( chunk, enc, clbk ) {\n\t\tvar c;\n\t\tvar i;\n\n\t\tfor ( i = 0; i < chunk.length; i++ ) {\n\t\t\tc = fromCodePoint( chunk[ i ] );\n\t\t\tif ( c === '\\n' ) {\n\t\t\t\tflush();\n\t\t\t} else {\n\t\t\t\tline += c;\n\t\t\t}\n\t\t}\n\t\tclbk();\n\t}\n\n\t/**\n\t* Callback to flush data to `stdout`.\n\t*\n\t* @private\n\t* @param {Callback} [clbk] - callback to invoke after processing data\n\t* @returns {void}\n\t*/\n\tfunction flush( clbk ) {\n\t\ttry {\n\t\t\tlog( line );\n\t\t} catch ( err ) {\n\t\t\tstream.emit( 'error', err );\n\t\t}\n\t\tline = '';\n\t\tif ( clbk ) {\n\t\t\treturn clbk();\n\t\t}\n\t}\n}\n\n\n// EXPORTS //\n\nexport default createStream;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MAIN //\n\n/**\n* Writes a string to the console.\n*\n* @private\n* @param {string} str - string to write\n*/\nfunction log( str ) {\n\tconsole.log( str ); // eslint-disable-line no-console\n}\n\n\n// EXPORTS //\n\nexport default log;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isFunction from '@stdlib/assert-is-function';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport isNodeWritableStreamLike from '@stdlib/assert-is-node-writable-stream-like';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport pick from '@stdlib/utils-pick';\nimport omit from '@stdlib/utils-omit';\nimport noop from '@stdlib/utils-noop';\nimport createHarness from './harness';\nimport logStream from './log';\nimport canEmitExit from './utils/can_emit_exit.js';\nimport proc from './utils/process.js';\n\n\n// MAIN //\n\n/**\n* Creates a benchmark harness which supports closing when a process exits.\n*\n* @private\n* @param {Options} [options] - function options\n* @param {boolean} [options.autoclose] - boolean indicating whether to automatically close a harness after a harness finishes running all benchmarks\n* @param {Stream} [options.stream] - output writable stream\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*\n* @example\n* var proc = require( 'process' );\n* var bench = createExitHarness( onFinish );\n*\n* function onFinish() {\n*     bench.close();\n* }\n*\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*\n* @example\n* import stdout from '@stdlib/streams-node-stdout';\n*\n* var stream = createExitHarness().createStream();\n* stream.pipe( stdout );\n*/\nfunction createExitHarness() {\n\tvar exitCode;\n\tvar pipeline;\n\tvar harness;\n\tvar options;\n\tvar stream;\n\tvar topts;\n\tvar opts;\n\tvar clbk;\n\n\tif ( arguments.length === 0 ) {\n\t\toptions = {};\n\t\tclbk = noop;\n\t} else if ( arguments.length === 1 ) {\n\t\tif ( isFunction( arguments[ 0 ] ) ) {\n\t\t\toptions = {};\n\t\t\tclbk = arguments[ 0 ];\n\t\t} else if ( isObject( arguments[ 0 ] ) ) {\n\t\t\toptions = arguments[ 0 ];\n\t\t\tclbk = noop;\n\t\t} else {\n\t\t\tthrow new TypeError( format( 'invalid argument. Must provide either an options object or a function. Value: `%s`.', arguments[ 0 ] ) );\n\t\t}\n\t} else {\n\t\toptions = arguments[ 0 ];\n\t\tif ( !isObject( options ) ) {\n\t\t\tthrow new TypeError( format( '05d3X', options ) );\n\t\t}\n\t\tclbk = arguments[ 1 ];\n\t\tif ( !isFunction( clbk ) ) {\n\t\t\tthrow new TypeError( format( '05d2S', clbk ) );\n\t\t}\n\t}\n\topts = {};\n\tif ( hasOwnProp( options, 'autoclose' ) ) {\n\t\topts.autoclose = options.autoclose;\n\t\tif ( !isBoolean( opts.autoclose ) ) {\n\t\t\tthrow new TypeError( format( '05d30', 'autoclose', opts.autoclose ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'stream' ) ) {\n\t\topts.stream = options.stream;\n\t\tif ( !isNodeWritableStreamLike( opts.stream ) ) {\n\t\t\tthrow new TypeError( format( '05d3Y', 'stream', opts.stream ) );\n\t\t}\n\t}\n\texitCode = 0;\n\n\t// Create a new harness:\n\ttopts = pick( opts, [ 'autoclose' ] );\n\tharness = createHarness( topts, done );\n\n\t// Create a results stream:\n\ttopts = omit( options, [ 'autoclose', 'stream' ] );\n\tstream = harness.createStream( topts );\n\n\t// Pipe results to an output stream:\n\tpipeline = stream.pipe( opts.stream || logStream() );\n\n\t// If a process can emit an 'exit' event, capture errors in order to set the exit code...\n\tif ( canEmitExit ) {\n\t\tpipeline.on( 'error', onError );\n\t\tproc.on( 'exit', onExit );\n\t}\n\treturn harness;\n\n\t/**\n\t* Callback invoked when a harness finishes.\n\t*\n\t* @private\n\t* @returns {void}\n\t*/\n\tfunction done() {\n\t\treturn clbk();\n\t}\n\n\t/**\n\t* Callback invoked upon a stream `error` event.\n\t*\n\t* @private\n\t* @param {Error} error - error object\n\t*/\n\tfunction onError() {\n\t\texitCode = 1;\n\t}\n\n\t/**\n\t* Callback invoked upon an `exit` event.\n\t*\n\t* @private\n\t* @param {integer} code - exit code\n\t*/\n\tfunction onExit( code ) {\n\t\tif ( code !== 0 ) {\n\t\t\t// Allow the process to exit...\n\t\t\treturn;\n\t\t}\n\t\tharness.close();\n\t\tproc.exit( exitCode || harness.exitCode );\n\t}\n}\n\n\n// EXPORTS //\n\nexport default createExitHarness;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport TransformStream from '@stdlib/streams-node-transform';\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport isFunction from '@stdlib/assert-is-function';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport createHarness from './harness';\nimport harness from './get_harness.js';\n\n\n// VARIABLES //\n\nvar listeners = [];\n\n\n// FUNCTIONS //\n\n/**\n* Callback invoked when a harness finishes running all benchmarks.\n*\n* @private\n*/\nfunction done() {\n\tvar len;\n\tvar f;\n\tvar i;\n\n\tlen = listeners.length;\n\n\t// Inform all the listeners that the harness has finished...\n\tfor ( i = 0; i < len; i++ ) {\n\t\tf = listeners.shift();\n\t\tf();\n\t}\n}\n\n/**\n* Creates a results stream.\n*\n* @private\n* @param {Options} [options] - stream options\n* @throws {Error} must provide valid stream options\n* @returns {TransformStream} results stream\n*/\nfunction createStream( options ) {\n\tvar stream;\n\tvar bench;\n\tvar opts;\n\tif ( arguments.length ) {\n\t\topts = options;\n\t} else {\n\t\topts = {};\n\t}\n\t// If we have already created a harness, calling this function simply creates another results stream...\n\tif ( harness.cached ) {\n\t\tbench = harness();\n\t\treturn bench.createStream( opts );\n\t}\n\tstream = new TransformStream( opts );\n\topts.stream = stream;\n\n\t// Create a harness which uses the created output stream:\n\tharness( opts, done );\n\n\treturn stream;\n}\n\n/**\n* Adds a listener for when a harness finishes running all benchmarks.\n*\n* @private\n* @param {Callback} clbk - listener\n* @throws {TypeError} must provide a function\n* @throws {Error} must provide a listener only once\n* @returns {void}\n*/\nfunction onFinish( clbk ) {\n\tvar i;\n\tif ( !isFunction( clbk ) ) {\n\t\tthrow new TypeError( format( '05d3V', clbk ) );\n\t}\n\t// Allow adding a listener only once...\n\tfor ( i = 0; i < listeners.length; i++ ) {\n\t\tif ( clbk === listeners[ i ] ) {\n\t\t\tthrow new Error( format( '05d0B' ) );\n\t\t}\n\t}\n\tlisteners.push( clbk );\n}\n\n\n// MAIN //\n\n/**\n* Runs a benchmark.\n*\n* @param {string} name - benchmark name\n* @param {Options} [options] - benchmark options\n* @param {boolean} [options.skip=false] - boolean indicating whether to skip a benchmark\n* @param {(PositiveInteger|null)} [options.iterations=null] - number of iterations\n* @param {PositiveInteger} [options.repeats=3] - number of repeats\n* @param {PositiveInteger} [options.timeout=300000] - number of milliseconds before a benchmark automatically fails\n* @param {Function} [benchmark] - function containing benchmark code\n* @throws {TypeError} first argument must be a string\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} benchmark argument must a function\n* @returns {Benchmark} benchmark harness\n*\n* @example\n* bench( 'beep', function benchmark( b ) {\n*     var x;\n*     var i;\n*     b.tic();\n*     for ( i = 0; i < b.iterations; i++ ) {\n*         x = Math.sin( Math.random() );\n*         if ( x !== x ) {\n*             b.ok( false, 'should not return NaN' );\n*         }\n*     }\n*     b.toc();\n*     if ( x !== x ) {\n*         b.ok( false, 'should not return NaN' );\n*     }\n*     b.end();\n* });\n*/\nfunction bench( name, options, benchmark ) {\n\tvar h = harness( done );\n\tif ( arguments.length < 2 ) {\n\t\th( name );\n\t} else if ( arguments.length === 2 ) {\n\t\th( name, options );\n\t} else {\n\t\th( name, options, benchmark );\n\t}\n\treturn bench;\n}\n\n/**\n* Creates a benchmark harness.\n*\n* @name createHarness\n* @memberof bench\n* @type {Function}\n* @param {Options} [options] - harness options\n* @param {Callback} [clbk] - callback to invoke when a harness finishes running all benchmarks\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @throws {TypeError} callback argument must be a function\n* @returns {Function} benchmark harness\n*/\nsetReadOnly( bench, 'createHarness', createHarness );\n\n/**\n* Creates a results stream.\n*\n* @name createStream\n* @memberof bench\n* @type {Function}\n* @param {Options} [options] - stream options\n* @throws {Error} must provide valid stream options\n* @returns {TransformStream} results stream\n*/\nsetReadOnly( bench, 'createStream', createStream );\n\n/**\n* Adds a listener for when a harness finishes running all benchmarks.\n*\n* @name onFinish\n* @memberof bench\n* @type {Function}\n* @param {Callback} clbk - listener\n* @throws {TypeError} must provide a function\n* @throws {Error} must provide a listener only once\n* @returns {void}\n*/\nsetReadOnly( bench, 'onFinish', onFinish );\n\n\n// EXPORTS //\n\nexport default bench;\n"],"names":["timeout$1","setTimeout","clear$1","clearTimeout","RE_COMMENT","nextTick","fcn","EventEmitter","require$$0","Benchmark","name","opts","benchmark","hasTicked","hasTocked","self","time","this","call","setReadOnly","skip","defineProperty","configurable","enumerable","writable","value","fail","emit","tic","elapsed","secs","rate","out","toc","iterations","ok","operator","timeout","inherit","prototype","id","_skip","comment","end","_benchmark","_running","once","clear","_exited","_ended","result","_count","todo","message","hasOwnProp","actual","expected","error","Error","format","msg","lines","i","trim","split","EOL","length","replace","_assert","RE_WHITESPACE","Runner","TransformStream","b","_benchmarks","push","_stream","write","on","res","isString","YAML_INDENT","total","pass","count","actualStack","errorStack","stack","toString","indent","at","RE_EOL","encodeAssertion","options","stream","arguments","objectMode","onPush","onDone","TAP_HEADER","pipe","onRun","next","onTick","shift","run","ended","bid","row","type","destroy","_closed","exit","validate","isObject","isBoolean","TypeError","isPositiveInteger","isNull","repeats","init","clbk","onIterations","iter","copy","err","pretest","onResult","onEnd","createHarness","exitCode","runner","queue","cb","isFunction","autoclose","harness","DEFAULTS","initialize","idx","args","onInit","createStream","close","getExitCode","setReadOnlyAccessor","proc","bool","IS_BROWSER","canExit","line","transform","chunk","enc","c","fromCodePoint","flush","str","console","log","createExitHarness","pipeline","topts","noop","isNodeWritableStreamLike","pick","done","omit","logStream","canEmitExit","onError","onExit","code","getHarness","cached","listeners","len","f","bench","h"],"mappings":"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"}